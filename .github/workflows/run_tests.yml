name: Run Google Tests

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v3.5.3
      with:
        fetch-depth: 0

    - name: Check available package versions
      run: |
        sudo apt update
        echo "Available versions for each package:"
        echo "libboost1.74-all-dev:"
        apt-cache policy libboost1.74-all-dev
        echo -e "\ncmake:"
        apt-cache policy cmake
        echo -e "\nlibssl-dev:"
        apt-cache policy libssl-dev
        echo -e "\nlibpq-dev:"
        apt-cache policy libpq-dev
        echo -e "\nrapidjson-dev:"
        apt-cache policy rapidjson-dev
        echo -e "\nlibyaml-cpp-dev:"
        apt-cache policy libyaml-cpp-dev
        echo -e "\nlibhiredis-dev:"
        apt-cache policy libhiredis-dev

    - name: Install dependencies and show versions
      run: |
        sudo apt install -y \
          libboost1.74-all-dev \
          build-essential \
          cmake \
          libssl-dev \
          libpq-dev \
          pkg-config \
          rapidjson-dev \
          libyaml-cpp-dev \
          libhiredis-dev

        echo "Installed versions:"
        dpkg -l | grep -E "boost|cmake|ssl|pq|rapidjson|yaml|hiredis"
        
    - name: Cache build directories
      uses: actions/cache@v3.3.1
      with:
        path: |
          build/_deps
          ~/.cache/pip
        key: ${{ runner.os }}-deps-${{ hashFiles('**/CMakeLists.txt') }}
        restore-keys: |
          ${{ runner.os }}-deps-

    - name: Cache build artifacts
      uses: actions/cache@v3.3.1
      with:
        path: |
          build/CMakeFiles
          build/*/CMakeFiles
          build/*/*.a
          build/*/*.so
        key: ${{ runner.os }}-build-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-build-

    - name: Build project
      run: |
        cd scripts
        chmod +x *.sh
        ./build.sh --debug --clean
      shell: bash

    - name: Run tests
      run: |
        cd scripts
        ./run_tests.sh